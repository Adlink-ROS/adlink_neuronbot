<!--
Copyright (c) 2018 ADLINK Technology
Developer: HaoChih Lin (haochih.lin@adlinktech.com)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<launch>
    <!-- General parameters -->
    <arg name="framerate"   default="30" />
    <arg name="camera"      default="camera" />

    <!-- For RGB image streaming -->
    <arg name="rgb_camera_info_url"  default="package://adlink_neuronbot/launch/host/include/params/astra_pro_640_480.yaml" />    

    <group ns="$(arg camera)">
        <node name="rgb" pkg="usb_cam" type="usb_cam_node" output="screen" >
            <param name="video_device" value="/dev/video0" />
            <param name="image_width"  value="640" />
            <param name="image_height" value="480" />
            <param name="framerate"    value="$(arg framerate)" />
            <param name="pixel_format" value="yuyv" />
            <param name="io_method"    value="mmap"/>
            <param name="camera_frame_id" value="$(arg camera)_rgb_optical_frame" />
            <param name="camera_info_url" value="$(arg rgb_camera_info_url)" />
            <param name="camera_name"     value="$(arg camera)" />        
        </node>
    </group>

    <!-- Image Proc for RGB streaming -->
    <group ns="$(arg camera)/rgb">
        <node name="image_proc" pkg="image_proc" type="image_proc" output="screen" > 
        </node>
    </group>


    <!-- For Depth image streaming -->
    <arg name="rgb_processing"               default="false"  />
    <arg name="color_depth_synchronization"  default="false" />  
    <arg name="depth_camera_info_url"        default="" />

    <include file="$(find astra_launch)/launch/astrapro.launch">
        <arg name="publish_tf"     value="false" />
        <arg name="camera"         value="$(arg camera)" />
        <arg name="rgb_processing" value="$(arg rgb_processing)" />
        <arg name="color_depth_synchronization" value="$(arg color_depth_synchronization)" />
        <arg name="depth_camera_info_url"       value="$(arg depth_camera_info_url)" />
    </include>

    <!-- Astra Pro TF -->
    <arg name="tf_prefix"      default="" />
    <arg name="pi/2"           value="1.5707963267948966" />
    <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link"  args="0 -0.02  0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_depth_frame 100" />  
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link1" args="0 -0.045 0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_rgb_frame 100" />  
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link2" args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_depth_frame $(arg tf_prefix)/$(arg camera)_depth_optical_frame  100" />  
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link3" args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_rgb_optical_frame 100" /> 

</launch>
