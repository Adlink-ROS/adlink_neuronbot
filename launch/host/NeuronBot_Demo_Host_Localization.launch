<launch>
    <!-- for amcl -->    
    <arg name="init_x" default="0.662" />
    <arg name="init_y" default="0.427" />
    <arg name="init_a" default="2.612" />

    <!-- Map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find adlink_neuronbot)/map/map.yaml"/>

    <!-- Localization (amcl) -->
    <include file="$(find adlink_neuronbot)/launch/include/neuronbot_amcl_improved.launch.xml">
        <arg name="init_x" value="$(arg init_x)"/>
        <arg name="init_y" value="$(arg init_y)"/>
        <arg name="init_a" value="$(arg init_a)"/>
    </include>

    <!-- ***************************** -->
    <!-- ROS 2.0 related nodes/setting -->
    <!-- ***************************** -->
    <!-- Parameters for autostart -->
    <!-- robot id (default based on hostname) for swarm network -->    
    <arg name="self_id" default="$(env HOSTNAME)" />

    <!-- Setting for ROS 2-1 topics bridge -->
    <rosparam param="topics">[{'topic':swarm_poses, 'type':geometry_msgs/TransformStamped}, {'topic':swarm_goals, 'type':geometry_msgs/TransformStamped}]</rosparam> 

    <!-- tf to transform node -->
    <node name="tf_to_transform"   pkg="adlink_neuronbot"  type="neuronbot_tf_to_transform.py" output="screen">
        <param name="self_id" value="$(arg self_id)"/>
        <param name="map_frame" value="map" />
        <param name="base_frame" value="base_footprint" />
    </node>

    <!-- robot id filter node -->
    <node name="robot_id_filter"   pkg="adlink_neuronbot"  type="neuronbot_robot_id_filter.py" output="screen">
        <param name="self_id" value="$(arg self_id)"/>
        <param name="map_id" value="map"/>
        <param name="id_timeout" value="1"/> <!-- unit: sec -->
        <param name="fake_radius" value="0.2"/> <!-- unit: meter --> 
    </node>

    <!-- Goal filter node -->
    <node name="goal_filter"   pkg="adlink_neuronbot"  type="neuronbot_goal_filter.py" output="screen">
        <param name="self_id" value="$(arg self_id)"/>
    </node>
</launch>
